#include <stdio.h>
#include <string.h>

#define MAX_STUDENTS 100

// Structure to store student information
struct Student {
    int roll_number;
    char name[100];
    float marks[5]; // Array to store marks for 5 subjects
};

// Global array to hold student data
struct Student students[MAX_STUDENTS];
int student_count = 0;

// Function to add a new student's details
void add_student() {
    if (student_count < MAX_STUDENTS) {
        struct Student new_student;
        printf("Enter Roll Number: ");
        scanf("%d", &new_student.roll_number);
        printf("Enter Student Name: ");
        getchar(); // To consume newline left by previous scanf
        fgets(new_student.name, 100, stdin);
        new_student.name[strcspn(new_student.name, "\n")] = '\0'; // Remove newline
        printf("Enter Marks for 5 Subjects: \n");
        for (int i = 0; i < 5; i++) {
            printf("Subject %d: ", i + 1);
            scanf("%f", &new_student.marks[i]);
        }
        students[student_count] = new_student;
        student_count++;
        printf("Student added successfully!\n");
    } else {
        printf("Student list is full!\n");
    }
}

// Function to display all students' details
void display_students() {
    if (student_count == 0) {
        printf("No students to display.\n");
        return;
    }
    printf("\nStudent List:\n");
    for (int i = 0; i < student_count; i++) {
        printf("\nRoll Number: %d\n", students[i].roll_number);
        printf("Name: %s\n", students[i].name);
        printf("Marks: ");
        for (int j = 0; j < 5; j++) {
            printf("%.2f ", students[i].marks[j]);
        }
        printf("\n");
    }
}

// Function to search for a student by roll number
void search_student() {
    int roll_number;
    printf("Enter Roll Number to search: ");
    scanf("%d", &roll_number);
    for (int i = 0; i < student_count; i++) {
        if (students[i].roll_number == roll_number) {
            printf("\nStudent Found:\n");
            printf("Roll Number: %d\n", students[i].roll_number);
            printf("Name: %s\n", students[i].name);
            printf("Marks: ");
            for (int j = 0; j < 5; j++) {
                printf("%.2f ", students[i].marks[j]);
            }
            printf("\n");
            return;
        }
    }
    printf("Student with Roll Number %d not found.\n", roll_number);
}

// Function to update a student's details
void update_student() {
    int roll_number;
    printf("Enter Roll Number to update: ");
    scanf("%d", &roll_number);
    for (int i = 0; i < student_count; i++) {
        if (students[i].roll_number == roll_number) {
            printf("\nUpdating Student Details:\n");
            printf("Enter new Name: ");
            getchar(); // To consume newline left by previous scanf
            fgets(students[i].name, 100, stdin);
            students[i].name[strcspn(students[i].name, "\n")] = '\0'; // Remove newline
            printf("Enter new Marks for 5 Subjects: \n");
            for (int j = 0; j < 5; j++) {
                printf("Subject %d: ", j + 1);
                scanf("%f", &students[i].marks[j]);
            }
            printf("Student details updated successfully!\n");
            return;
        }
    }
    printf("Student with Roll Number %d not found.\n", roll_number);
}

// Function to delete a student's information
void delete_student() {
    int roll_number;
    printf("Enter Roll Number to delete: ");
    scanf("%d", &roll_number);
    for (int i = 0; i < student_count; i++) {
        if (students[i].roll_number == roll_number) {
            // Shift all elements after the found student to the left
            for (int j = i; j < student_count - 1; j++) {
                students[j] = students[j + 1];
            }
            student_count--; // Decrease the count of students
            printf("Student with Roll Number %d deleted successfully!\n", roll_number);
            return;
        }
    }
    printf("Student with Roll Number %d not found.\n", roll_number);
}

// Main function to drive the program
int main() {
    int choice;
    do {
        printf("\nStudent Management System\n");
        printf("1. Add Student\n");
        printf("2. Display All Students\n");
        printf("3. Search Student by Roll Number\n");
        printf("4. Update Student Information\n");
        printf("5. Delete Student\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                add_student();
                break;
            case 2:
                display_students();
                break;
            case 3:
                search_student();
                break;
            case 4:
                update_student();
                break;
            case 5:
                delete_student();
                break;
            case 6:
                printf("Exiting the program.\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 6);

    return 0;
}
